services:
  payment-api:
    build:
      context: ./payment-api
      dockerfile: Dockerfile
    container_name: payment-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - monitoring_network

  pg-mock:
    build:
      context: ./pg-mock
      dockerfile: Dockerfile
    container_name: pg-mock
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - monitoring_network

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - monitoring_network
  mysql:
    image: mysql:8.0
    container_name: payment_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: payment_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: exporter
      MYSQL_PASSWORD: password
      TZ: Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max_connections=1000
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - monitoring_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:latest
    container_name: payment_redis
    ports:
      - "6379:6379"
    networks:
      - monitoring_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring_network

networks:
  monitoring_network:
    driver: bridge

volumes:
  mysql_data:
  grafana_data: